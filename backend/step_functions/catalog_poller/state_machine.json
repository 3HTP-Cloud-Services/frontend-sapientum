{
  "Comment": "Poll catalog status until kb_name and data_source_name are available, then update database",
  "StartAt": "CheckCatalogStatus",
  "States": {
    "CheckCatalogStatus": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:CheckCatalogStatus",
      "Comment": "Call Lambda to check catalog status via external API",
      "ResultPath": "$",
      "Next": "IsCatalogReady",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "CheckMaxAttempts",
          "ResultPath": "$.error"
        }
      ]
    },
    "IsCatalogReady": {
      "Type": "Choice",
      "Comment": "Check if catalog has valid kb_name and data_source_name",
      "Choices": [
        {
          "Variable": "$.catalog_ready",
          "BooleanEquals": true,
          "Next": "UpdateCatalogInDB"
        },
        {
          "Variable": "$.catalog_ready",
          "BooleanEquals": false,
          "Next": "CheckMaxAttempts"
        }
      ],
      "Default": "CheckMaxAttempts"
    },
    "CheckMaxAttempts": {
      "Type": "Choice",
      "Comment": "Check if we've reached maximum polling attempts",
      "Choices": [
        {
          "Variable": "$.attempt_count",
          "NumericGreaterThan": 150,
          "Comment": "150 attempts * 20 seconds = 50 minutes max",
          "Next": "MaxAttemptsReached"
        }
      ],
      "Default": "WaitBeforeRetry"
    },
    "WaitBeforeRetry": {
      "Type": "Wait",
      "Comment": "Wait 20 seconds before checking again",
      "Seconds": 20,
      "Next": "CheckCatalogStatus"
    },
    "UpdateCatalogInDB": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:UpdateCatalogDB",
      "Comment": "Update catalog in database with kb_name and data_source_name",
      "ResultPath": "$.update_result",
      "Next": "Success",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "UpdateFailed",
          "ResultPath": "$.update_error"
        }
      ]
    },
    "Success": {
      "Type": "Succeed",
      "Comment": "Catalog successfully updated in database"
    },
    "MaxAttemptsReached": {
      "Type": "Fail",
      "Comment": "Maximum polling attempts reached without getting valid kb_name and data_source_name",
      "Error": "MaxAttemptsExceeded",
      "Cause": "Catalog did not become ready within the maximum time limit (50 minutes)"
    },
    "UpdateFailed": {
      "Type": "Fail",
      "Comment": "Failed to update catalog in database",
      "Error": "DatabaseUpdateFailed",
      "Cause": "An error occurred while updating the catalog in the database"
    }
  }
}
