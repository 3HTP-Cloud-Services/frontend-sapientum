AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Flask en AWS Lambda

Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,Authorization,X-Requested-With'"
      AllowOrigin: "'http://sapientum-app.3htp.cloud'"
      AllowCredentials: true
    BinaryMediaTypes:
      - "*/*" # This allows all binary types
      # Or be more specific:
      # - "image/*"
      # - "application/pdf"
      # - "application/octet-stream"
      # - "multipart/form-data"

Resources:
  FlaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: lambda_handler.lambda_handler
      Runtime: python3.11
      Architectures:
        - arm64
      MemorySize: 1024
      Timeout: 30
      Environment:
        Variables:
          STATIC_MODE: "true"
          COGNITO_USER_POOL_ID: "us-east-1_1pPT6lSMc"
          COGNITO_CLIENT_ID: "4ed15at0palqflefuvlu536mme"
          COGNITO_REGION: "us-east-1"
          CATALOG_POLLER_STEP_FUNCTION_ARN: "arn:aws:states:us-east-1:369595298303:stateMachine:CatalogStatusPollerStateMachine"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: "secretsmanager:GetSecretValue"
              Resource: "arn:aws:secretsmanager:us-east-1:369595298303:secret:sapientum_connection-I7Q8Mc"
            - Effect: Allow
              Action:
                - "s3:ListBucket"
                - "s3:GetObject"
                - "s3:PutObject"
              Resource:
                - "arn:aws:s3:::s3-3htp-sapientum-ai"
                - "arn:aws:s3:::s3-3htp-sapientum-ai/*"
            - Effect: Allow
              Action: "states:StartExecution"
              Resource: "arn:aws:states:us-east-1:369595298303:stateMachine:CatalogStatusPollerStateMachine"
            - Effect: Allow
              Action: "sts:AssumeRole"
              Resource: "arn:aws:iam::369595298303:role/sapientum_role"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: ANY
        ApiProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
